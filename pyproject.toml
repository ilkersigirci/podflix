[project]
name = "podflix"
version = "0.1.0"
description = "Chat with your podcast"
readme = "README.md"
requires-python = ">=3.11,<3.13"

authors = [
    {name = "İlker SIĞIRCI", email = "sigirci.ilker@gmail.com"},
]
maintainers = [
    {name = "İlker SIĞIRCI", email = "sigirci.ilker@gmail.com"},
]

keywords = [
    "podflix"
]

classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "aiosqlite>=0.20.0",
    "asyncpg>=0.30.0",
    "boto3>=1.35.92",
    "chainlit>=2.5.5",
    "huggingface-hub>=0.27.0",
    "langchain>=0.3.13",
    "langchain-community>=0.3.13",
    "langchain-openai>=0.3.3",
    "langfuse>=2.57.2",
    "langgraph>=0.2.60",
    "loguru>=0.7.3",
    "prisma>=0.15.0",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.7.0",
    "python-fasthtml>=0.12.0",
    "youtube-transcript-api>=1.1.0",
    "yt-dlp>=2025.1.12",
]

[tool.uv]
default-groups = ["dev", "doc", "test"]

[tool.pytest.ini_options]
minversion = "7.0.0"
asyncio_mode = "auto"

# TODO: Make them inherit from yaml file
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)-20s :: %(name)-8s :: %(levelname)-8s :: %(filename)s:%(lineno)d - (%(funcName)s) :: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

testpaths = ["tests"]

addopts = [
    "--import-mode=importlib",
    "--color=yes",
    "--verbose",
#    "--durations=0",
#    "--strict-markers",
#    "--doctest-modules",
    # NOTE: cov is not working with pycharm debugger. Enable it later!
#    "--cov podflix",
#    "--cov-report=xml",
#    "--cov-report html",
]

[tool.ruff]
# target-version = "py311"
line-length = 88
src = ["src"]
respect-gitignore = true
# extend-include = []

extend-exclude = [
    "docs",
    # "tests",
]

# [tool.ruff.flake8-quotes]
# inline-quotes = "single"
# multiline-quotes = "double"
# docstring-quotes = "double"

[tool.ruff.format]
skip-magic-trailing-comma = false
# indent-style = "space"
# preview = true

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C",  # flake8-comprehensions
    "C9",  # mccabe
    "D",  # flake8-docstrings
    "E",  # pycodestyle errors (default)
    "F",  # pyflakes (default)
    "I",  # isort
    "PD", # pandas-vet
    "PIE", # pie
    "PL",  # pylint
    "PTH", # pathlib
    "Q",  # flake8-quotes
    "RET", # return
    "RUF", # Enable all ruff-specific checks
    "SIM", # simplify
    "S307", # eval
    "T20",  # (disallow print statements) keep debugging statements out of the codebase
    "W",  # pycodestyle warnings
    "ASYNC" # async
]

ignore = [
    "E501",  # Line too long, handled by ruff formatter
    "D107", # "Missing docstring in __init__",
]

unfixable = [
    "F401" # Unused imports.
]

#extend-select = []

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"src/podflix/gui/*.py" = ["D"]
"*.ipynb" = ["D", "T20"] # Disable docstring and print checks for notebooks
# 'podflix/__init__.py' = ['F405', 'F403']

# [tool.ruff.lint.flake8-import-conventions.extend-aliases]
# some_alias = ""

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
combine-as-imports = true
# force-wrap-aliases = true
# known-first-party = ["SomeLibrary"]
# known-third-party = ["SomeLibrary"]

[tool.coverage.run]
source = ['src/podflix']
branch = true
context = '${CONTEXT}'

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]
# show_missing = True

# [tool.coverage.paths]
# source = [
#     'src/podflix/',
# ]

# [build-system]
# requires = ["uv>=0.5.0,<1.0.0"]
# build-backend = "uv" # FIXME: Only builds source distribution, not wheel

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "ruff>=0.11.3",
    # "scalene~=1.5.21.2",
]
doc = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.42",
    "mkdocstrings[python]>=0.26.2",
    # "mdx-include",
    # "mkdocs-markdownextradata-plugin",
]
test = [
    "pytest-cov>=5.0.0",
    "pytest-rerunfailures>=14.0",
    "pytest-xdist>=3.6.1",
    "pytest>=8.3.3",
    # "pytest-timeout",
    "pytest-asyncio>=0.25.1",
    "moto[s3]>=5.0.25",
]
